import{x as d,y as m,i as x,r as y,z as f,o as r,c as i,t as o,j as l,a as v,n as g}from"./DyzRkd84.js";function h(t){return d(()=>{var s;const e=(s=m())==null?void 0:s.appContext.app.$nuxt;return e?e.runWithContext(t):t()})}const u={},w="",C="",_="icons";function B(t){return t.toLowerCase().replace(/\.svg$/,"").replace(/[^a-z0-9-:]/g,"-").replace(/:/g,"--")}const p=async t=>{let[e,s]=t.split("/");s||(s=e,e=_);const n=u[e]?await u[e]():"";return{sprite:e,icon:s,url:n+`#${B(s)}`,class:`${w} ${C}${e}`}},S=["viewBox"],$={key:0},N={key:1},k=["href"],I=x({__name:"svg-icon",props:{name:{type:String,required:!0},title:{type:String,default:null},desc:{type:String,default:null},viewBox:{type:String,default:null,validator(t){return t.split(" ").every(e=>!isNaN(parseInt(e)))}}},async setup(t){let e,s;const n=t,a=y({url:"",class:""});return a.value=([e,s]=h(()=>p(n.name)),e=await e,s(),e),f(()=>n.name,async c=>{a.value=await p(c)}),(c,z)=>(r(),i("svg",{viewBox:t.viewBox,class:g(a.value.class)},[t.title?(r(),i("title",$,o(t.title),1)):l("",!0),t.desc?(r(),i("desc",N,o(t.desc),1)):l("",!0),v("use",{href:a.value.url},null,8,k)],10,S))}});export{I as _};
